diff --git a/node_modules/@nasa-gcn/remix-seo/build/sitemap/index.d.ts b/node_modules/@nasa-gcn/remix-seo/build/sitemap/index.d.ts
index 9956c23..396b03d 100644
--- a/node_modules/@nasa-gcn/remix-seo/build/sitemap/index.d.ts
+++ b/node_modules/@nasa-gcn/remix-seo/build/sitemap/index.d.ts
@@ -1,3 +1,3 @@
-import type { ServerBuild } from "@remix-run/server-runtime";
+import type { AppLoadContext, ServerBuild } from "@remix-run/server-runtime";
 import { SEOOptions } from "../types";
-export declare function generateSitemap(request: Request, routes: ServerBuild["routes"], options: SEOOptions): Promise<Response>;
+export declare function generateSitemap(request: Request, routes: ServerBuild["routes"], options: SEOOptions, context?: AppLoadContext): Promise<Response>;
diff --git a/node_modules/@nasa-gcn/remix-seo/build/sitemap/index.js b/node_modules/@nasa-gcn/remix-seo/build/sitemap/index.js
index 8acdc5a..a9541d2 100644
--- a/node_modules/@nasa-gcn/remix-seo/build/sitemap/index.js
+++ b/node_modules/@nasa-gcn/remix-seo/build/sitemap/index.js
@@ -2,9 +2,9 @@
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.generateSitemap = void 0;
 const utils_1 = require("./utils");
-async function generateSitemap(request, routes, options) {
+async function generateSitemap(request, routes, options, context) {
     const { siteUrl, headers } = options;
-    const sitemap = await (0, utils_1.getSitemapXml)(request, routes, { siteUrl });
+    const sitemap = await (0, utils_1.getSitemapXml)(request, routes, { siteUrl }, context);
     const bytes = new TextEncoder().encode(sitemap).byteLength;
     return new Response(sitemap, {
         headers: {
diff --git a/node_modules/@nasa-gcn/remix-seo/build/sitemap/utils.d.ts b/node_modules/@nasa-gcn/remix-seo/build/sitemap/utils.d.ts
index 38d4712..288b878 100644
--- a/node_modules/@nasa-gcn/remix-seo/build/sitemap/utils.d.ts
+++ b/node_modules/@nasa-gcn/remix-seo/build/sitemap/utils.d.ts
@@ -1,6 +1,6 @@
-import type { ServerBuild } from "@remix-run/server-runtime";
-declare type Options = {
+import type { AppLoadContext, ServerBuild } from "@remix-run/server-runtime";
+type Options = {
     siteUrl: string;
 };
-declare function getSitemapXml(request: Request, routes: ServerBuild["routes"], options: Options): Promise<string>;
+declare function getSitemapXml(request: Request, routes: ServerBuild["routes"], options: Options, context?: AppLoadContext): Promise<string>;
 export { getSitemapXml };
diff --git a/node_modules/@nasa-gcn/remix-seo/build/sitemap/utils.js b/node_modules/@nasa-gcn/remix-seo/build/sitemap/utils.js
index 378e1c7..0e67232 100644
--- a/node_modules/@nasa-gcn/remix-seo/build/sitemap/utils.js
+++ b/node_modules/@nasa-gcn/remix-seo/build/sitemap/utils.js
@@ -12,7 +12,7 @@ function typedBoolean(value) {
 function removeTrailingSlash(s) {
     return s.endsWith("/") ? s.slice(0, -1) : s;
 }
-async function getSitemapXml(request, routes, options) {
+async function getSitemapXml(request, routes, options, context) {
     const { siteUrl } = options;
     function getEntry({ route, lastmod, changefreq, priority = 0.7, }) {
         return `
@@ -29,7 +29,7 @@ async function getSitemapXml(request, routes, options) {
             return;
         const handle = mod.handle;
         if (handle === null || handle === void 0 ? void 0 : handle.getSitemapEntries) {
-            return handle.getSitemapEntries(request);
+            return handle.getSitemapEntries(request, context);
         }
         // exclude resource routes from the sitemap
         // (these are an opt-in via the getSitemapEntries method)
diff --git a/node_modules/@nasa-gcn/remix-seo/build/types/index.d.ts b/node_modules/@nasa-gcn/remix-seo/build/types/index.d.ts
index d5e7e10..1a7f5ff 100644
--- a/node_modules/@nasa-gcn/remix-seo/build/types/index.d.ts
+++ b/node_modules/@nasa-gcn/remix-seo/build/types/index.d.ts
@@ -1,21 +1,22 @@
-export declare type SitemapEntry = {
+import { AppLoadContext } from "@remix-run/server-runtime";
+export type SitemapEntry = {
     route: string;
     lastmod?: string;
     changefreq?: "always" | "hourly" | "daily" | "weekly" | "monthly" | "yearly" | "never";
     priority?: 0.0 | 0.1 | 0.2 | 0.3 | 0.4 | 0.5 | 0.6 | 0.7 | 0.8 | 0.9 | 1.0;
 };
-export declare type SEOHandle = {
-    getSitemapEntries?: (request: Request) => Promise<Array<SitemapEntry | null> | null> | Array<SitemapEntry | null> | null;
+export type SEOHandle = {
+    getSitemapEntries?: (request: Request, context?: AppLoadContext) => Promise<Array<SitemapEntry | null> | null> | Array<SitemapEntry | null> | null;
 };
-export declare type SEOOptions = {
+export type SEOOptions = {
     siteUrl: string;
     headers?: HeadersInit;
 };
-export declare type RobotsPolicy = {
+export type RobotsPolicy = {
     type: "allow" | "disallow" | "sitemap" | "crawlDelay" | "userAgent";
     value: string;
 };
-export declare type RobotsConfig = {
+export type RobotsConfig = {
     appendOnDefaultPolicies?: boolean;
     headers?: HeadersInit;
 };
diff --git a/node_modules/@nasa-gcn/remix-seo/src/sitemap/index.ts b/node_modules/@nasa-gcn/remix-seo/src/sitemap/index.ts
index b31435d..6f5c652 100644
--- a/node_modules/@nasa-gcn/remix-seo/src/sitemap/index.ts
+++ b/node_modules/@nasa-gcn/remix-seo/src/sitemap/index.ts
@@ -1,14 +1,15 @@
-import type { ServerBuild } from "@remix-run/server-runtime";
+import type { AppLoadContext, ServerBuild } from "@remix-run/server-runtime";
 import { SEOOptions } from "../types";
 import { getSitemapXml } from "./utils";
 
 export async function generateSitemap(
   request: Request,
   routes: ServerBuild["routes"],
-  options: SEOOptions
+  options: SEOOptions,
+  context?: AppLoadContext
 ) {
   const { siteUrl, headers } = options;
-  const sitemap = await getSitemapXml(request, routes, { siteUrl });
+  const sitemap = await getSitemapXml(request, routes, { siteUrl }, context);
   const bytes = new TextEncoder().encode(sitemap).byteLength
   
   return new Response(sitemap, {
diff --git a/node_modules/@nasa-gcn/remix-seo/src/sitemap/utils.ts b/node_modules/@nasa-gcn/remix-seo/src/sitemap/utils.ts
index c67d259..134f9b6 100644
--- a/node_modules/@nasa-gcn/remix-seo/src/sitemap/utils.ts
+++ b/node_modules/@nasa-gcn/remix-seo/src/sitemap/utils.ts
@@ -1,6 +1,6 @@
 // This is adapted from https://github.com/kentcdodds/kentcdodds.com
 
-import type { ServerBuild } from "@remix-run/server-runtime";
+import type { AppLoadContext, ServerBuild } from "@remix-run/server-runtime";
 import isEqual from "lodash/isEqual";
 import { SEOHandle, SitemapEntry } from "../types";
 
@@ -21,7 +21,8 @@ function removeTrailingSlash(s: string) {
 async function getSitemapXml(
   request: Request,
   routes: ServerBuild["routes"],
-  options: Options
+  options: Options,
+  context?: AppLoadContext
 ) {
   const { siteUrl } = options;
 
@@ -48,7 +49,7 @@ async function getSitemapXml(
 
         const handle = mod.handle as SEOHandle | undefined;
         if (handle?.getSitemapEntries) {
-          return handle.getSitemapEntries(request);
+          return handle.getSitemapEntries(request, context);
         }
 
         // exclude resource routes from the sitemap
diff --git a/node_modules/@nasa-gcn/remix-seo/src/types/index.ts b/node_modules/@nasa-gcn/remix-seo/src/types/index.ts
index 892de77..24e2d0a 100644
--- a/node_modules/@nasa-gcn/remix-seo/src/types/index.ts
+++ b/node_modules/@nasa-gcn/remix-seo/src/types/index.ts
@@ -1,3 +1,5 @@
+import { AppLoadContext } from "@remix-run/server-runtime";
+
 export type SitemapEntry = {
   route: string;
   lastmod?: string;
@@ -14,7 +16,8 @@ export type SitemapEntry = {
 
 export type SEOHandle = {
   getSitemapEntries?: (
-    request: Request
+    request: Request,
+    context?: AppLoadContext
   ) =>
     | Promise<Array<SitemapEntry | null> | null>
     | Array<SitemapEntry | null>
